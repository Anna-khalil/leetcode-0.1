//二分int模板
//寻找 13555678 中 左起第一个5
// 区间[l, r]被划分成[l, mid]和[mid + 1, r]时使用：
int bsearch_1(int l, int r)
{
    while (l < r)
    {
        int mid = l + r >> 1;
        if (check(mid)) r = mid;    // check()判断mid是否满足性质  缩圈右边
        else l = mid + 1;
    }
    return l;
}

//寻找 13555678 中 右起第一个5
// 区间[l, r]被划分成[l, mid - 1]和[mid, r]时使用：
int bsearch_2(int l, int r)
{
    while (l < r)
    {
        int mid = l + r + 1 >> 1;
        if (check(mid)) l = mid;
        else r = mid - 1;
    }
    return l;
}


class Solution {
public:
    int search(vector<int>& nums, int target) {
        int left = 0;
        int right = nums.size() - 1;
        while ( left < right )
        {
            int  mid =( left + right )>> 1;
            if (nums[mid] >= target) right = mid;
            else left = mid + 1;
        }
        if(nums[left] == target) return left;
        else return -1;
    }
};
