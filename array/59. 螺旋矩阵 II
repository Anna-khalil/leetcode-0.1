class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        vector<vector<int>> res(n,vector<int>(n,0));
        int dx[4]={0,1,0,-1};//用预置数组控制转向
        int dy[4]={1,0,-1,0};
        int idx=0;
        int x=0,y=0;//矩阵下标从0开始

        for(int j = 1;j <= n * n; j++)
        {
            res[x][y] = j;//每次进入时x y都是有效下标

            int px = x + dx[idx];//处理下一步的下标 pre-index
            int py = y + dy[idx];
            if(px >= n || px < 0 || py >= n || py < 0 || res[px][py] != 0)//注意这里是 res[px][py]
            {
                idx = (idx + 1) % 4;
            }

            x = x + dx[idx], y = y + dy[idx];//获取正确下标
        }

        return res;
    }
};