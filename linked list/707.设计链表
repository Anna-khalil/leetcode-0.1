class MyLinkedList {
public:
    //链表节点以结构体的方式定义
    struct LinkedNode {
        int val;
        LinkedNode* next;
        LinkedNode(int v) { val = v;next = NULL;}
    };

    //初始化 虚拟头节点 后面每一步index的操作 实则对应cur -> next
    MyLinkedList() {
        dummyHead = new LinkedNode(0);
        size = 0;
    }
    
    int get(int index) {
        if(index < 0 || index > size - 1 ) { return -1;}
        LinkedNode* cur = dummyHead;
        while(index--) {
            cur = cur -> next;
        }
        return cur -> next -> val;
    }
    
    void addAtHead(int val) {
        LinkedNode* newNode = new LinkedNode(val);
        newNode -> next = dummyHead -> next;
        dummyHead -> next = newNode;
        size++;
    }
    
    void addAtTail(int val) {
        LinkedNode* newNode = new LinkedNode(val);
        LinkedNode* cur = dummyHead;
        while(cur -> next) {
            cur = cur -> next;
        }
        cur -> next = newNode;
        size++;
    }
    
    //在index下标前插入新节点（index<0则插入到头部）
    void addAtIndex(int index, int val) {
        if(index < 0) { index = 0; }
        if(index > size ) {return;}
        LinkedNode* newNode = new LinkedNode(val);
        LinkedNode* cur = dummyHead;
        while(index--) {
            cur = cur -> next;
        }
        newNode -> next = cur -> next;
        cur -> next = newNode;
        size++;
    }
    
    void deleteAtIndex(int index) {
        if(index < 0 || index > size - 1) {return;}
        LinkedNode* cur = dummyHead;
        while(index--) {
            cur = cur -> next;
        }
        LinkedNode* tmp = cur -> next;
        cur -> next = tmp -> next;
        delete tmp;
        size--;
    }

    void printLinkedList() {
        LinkedNode* cur = dummyHead;
        while(cur -> next ){
            cout << cur -> next -> val <<" ";
            cur = cur -> next;
        }
        cout << endl;
    }
private:
    LinkedNode* dummyHead;
    int size;
};

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList* obj = new MyLinkedList();
 * int param_1 = obj->get(index);
 * obj->addAtHead(val);
 * obj->addAtTail(val);
 * obj->addAtIndex(index,val);
 * obj->deleteAtIndex(index);
 */