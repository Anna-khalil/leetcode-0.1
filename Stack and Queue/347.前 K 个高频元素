class Solution {
public:
    class mycomparison {
        public:
        //小根堆
            bool operator()(const pair<int, int>& lhs,const pair<int, int> &rhs) {
                return lhs.second > rhs.second;
            }
    };

    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> map;
        for(int i = 0; i < nums.size(); i++) {
            map[nums[i]]++;
        }

        //元素类型 底层容器类型 比较器
        priority_queue<pair<int,int>,vector<pair<int,int>>,mycomparison> pq;


        for( auto &  kv : map ) {
            pq.push(kv);
            if(pq.size() > k){
                pq.pop();
            }
        }

        vector<int> res(k);
        for(int i = k - 1; i >= 0; i--) {
            res[i] = pq.top().first;
            pq.pop();
        }

        return res;
    }
};